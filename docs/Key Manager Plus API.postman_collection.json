{
	"info": {
		"_postman_id": "47c81653-67fb-4072-9818-50f8c4cf5337",
		"name": "Key Manager Plus API",
		"description": "Key Manager Plus APIs allow other applications to connect, interact, and integrate with\nKey Manager Plus directly. These RESTful APIs enable applications to create, fetch,\nassociate digital keys and add, retrieve or manage users programmatically.\n\n\nContact Support:\n Name: ManageEngine",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "179382"
	},
	"item": [
		{
			"name": "createsshkey",
			"item": [
				{
					"name": "Create a new SSH key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/createsshkey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"keytest\",\"passPhrase\":\"passPhrase\",\"comment\":\"comment\",\"length\":\"2048\",\"keyType\":\"ssh-rsa\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"createsshkey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"keytest\",\"passPhrase\":\"passPhrase\",\"comment\":\"comment\",\"length\":\"2048\",\"keyType\":\"ssh-rsa\"}}}",
									"description": "(Required) JSON string containing SSH key details"
								}
							]
						},
						"description": "Creates a new SSH key with the specified parameters"
					},
					"response": [
						{
							"name": "SSH key created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createsshkey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"keytest\",\"passPhrase\":\"passPhrase\",\"comment\":\"comment\",\"length\":\"2048\",\"keyType\":\"ssh-rsa\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createsshkey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"keytest\",\"passPhrase\":\"passPhrase\",\"comment\":\"comment\",\"length\":\"2048\",\"keyType\":\"ssh-rsa\"}}}",
											"description": "(Required) JSON string containing SSH key details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"CreateSSHKey\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"New SSH key created successfully\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createsshkey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"keytest\",\"passPhrase\":\"passPhrase\",\"comment\":\"comment\",\"length\":\"2048\",\"keyType\":\"ssh-rsa\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createsshkey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"keytest\",\"passPhrase\":\"passPhrase\",\"comment\":\"comment\",\"length\":\"2048\",\"keyType\":\"ssh-rsa\"}}}",
											"description": "(Required) JSON string containing SSH key details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createsshkey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"keytest\",\"passPhrase\":\"passPhrase\",\"comment\":\"comment\",\"length\":\"2048\",\"keyType\":\"ssh-rsa\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createsshkey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"keytest\",\"passPhrase\":\"passPhrase\",\"comment\":\"comment\",\"length\":\"2048\",\"keyType\":\"ssh-rsa\"}}}",
											"description": "(Required) JSON string containing SSH key details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "applycredentials",
			"item": [
				{
					"name": "Update Credentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/applycredentials?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test3\",\"password\":\"test3\",\"resourceName\":\"172.21.147.80\",\"isAdmin\":\"false\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applycredentials"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"userName\":\"test3\",\"password\":\"test3\",\"resourceName\":\"172.21.147.80\",\"isAdmin\":\"false\"}}}",
									"description": "(Required) JSON string containing credential details"
								}
							]
						},
						"description": "Update credentials for the discovered resources"
					},
					"response": [
						{
							"name": "Credentials updated successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applycredentials?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test3\",\"password\":\"test3\",\"resourceName\":\"172.21.147.80\",\"isAdmin\":\"false\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applycredentials"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test3\",\"password\":\"test3\",\"resourceName\":\"172.21.147.80\",\"isAdmin\":\"false\"}}}",
											"description": "(Required) JSON string containing credential details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"ApplyCredentials\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"Credentials updated successfully\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applycredentials?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test3\",\"password\":\"test3\",\"resourceName\":\"172.21.147.80\",\"isAdmin\":\"false\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applycredentials"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test3\",\"password\":\"test3\",\"resourceName\":\"172.21.147.80\",\"isAdmin\":\"false\"}}}",
											"description": "(Required) JSON string containing credential details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/applycredentials?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test3\",\"password\":\"test3\",\"resourceName\":\"172.21.147.80\",\"isAdmin\":\"false\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applycredentials"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test3\",\"password\":\"test3\",\"resourceName\":\"172.21.147.80\",\"isAdmin\":\"false\"}}}",
											"description": "(Required) JSON string containing credential details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getAllSSHResourceDetails",
			"item": [
				{
					"name": "Get All SSH Resources",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getAllSSHResourceDetails",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getAllSSHResourceDetails"
							]
						},
						"description": "Fetches all the SSH resources"
					},
					"response": [
						{
							"name": "SSH resources fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSHResourceDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSHResourceDetails"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetAllSSHResources\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"All SSH Resources fetched successfully.\"\n  },\n  \"totalRows\": 2,\n  \"details\": [\n    {\n      \"Path\": \"/home\",\n      \"Description\": \"NA\",\n      \"ResourceId\": 1,\n      \"ResourceName\": \"pmp-linux.keymanagerplus.com\",\n      \"Port\": 22,\n      \"CreationTime\": \"Apr 13, 2023 16:55\",\n      \"IPADDRESS\": \"172.XX.145.XXX\",\n      \"LandingServerName\": \"-\"\n    },\n    {\n      \"Path\": \"/home\",\n      \"Description\": \"NA\",\n      \"ResourceId\": 1,\n      \"ResourceName\": \"pmp-linux.keymanagerplus.com\",\n      \"Port\": 22,\n      \"CreationTime\": \"Apr 13, 2023 16:55\",\n      \"IPADDRESS\": \"172.XX.145.XXX\",\n      \"LandingServerName\": \"-\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSHResourceDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSHResourceDetails"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getAllSSHKeys",
			"item": [
				{
					"name": "Get All SSH Keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getAllSSHKeys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getAllSSHKeys"
							]
						},
						"description": "Fetches all the discovered SSH keys"
					},
					"response": [
						{
							"name": "SSH keys fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSHKeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSHKeys"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetAllSSHKeys\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"All SSH Keys fetched successfully\"\n  },\n  \"totalRows\": 1,\n  \"details\": [\n    {\n      \"KeyName\": \"testkey\",\n      \"KeyType\": \"ssh-rsa\",\n      \"KeyLength\": \"2048\",\n      \"FingerPrint\": \"SHA256:v28/AlRYrpBKjAp4JoTRphLOkFdVb1ummVcyFHSfC5I\",\n      \"isPassphraseAvailable\": false,\n      \"CreatedBy\": \"admin\",\n      \"CreationTime\": \"Today\"\n    },\n    {\n      \"KeyName\": \"testkey\",\n      \"KeyType\": \"ssh-rsa\",\n      \"KeyLength\": \"2048\",\n      \"FingerPrint\": \"SHA256:v28/AlRYrpBKjAp4JoTRphLOkFdVb1ummVcyFHSfC5I\",\n      \"isPassphraseAvailable\": false,\n      \"CreatedBy\": \"admin\",\n      \"CreationTime\": \"Today\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSHKeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSHKeys"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getSSHKey",
			"item": [
				{
					"name": "Get SSH Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"key\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getSSHKey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"key\"}}}",
									"description": "(Required) JSON string containing SSH key name"
								}
							]
						},
						"description": "Fetches a particular SSH key from the discovered keys"
					},
					"response": [
						{
							"name": "SSH key fetched successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"key\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"key\"}}}",
											"description": "(Required) JSON string containing SSH key name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetSSHKey\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"SSH Key testkey fetched successfully\"\n  },\n  \"details\": [\n    {\n      \"KeyName\": \"testkey\",\n      \"KeyType\": \"ssh-rsa\",\n      \"KeyLength\": \"2048\",\n      \"FingerPrint\": \"SHA256:v28/AlRYrpBKjAp4JoTRphLOkFdVb1ummVcyFHSfC5I\",\n      \"isPassphraseAvailable\": false,\n      \"CreatedBy\": \"admin\",\n      \"CreationTime\": \"Today\"\n    },\n    {\n      \"KeyName\": \"testkey\",\n      \"KeyType\": \"ssh-rsa\",\n      \"KeyLength\": \"2048\",\n      \"FingerPrint\": \"SHA256:v28/AlRYrpBKjAp4JoTRphLOkFdVb1ummVcyFHSfC5I\",\n      \"isPassphraseAvailable\": false,\n      \"CreatedBy\": \"admin\",\n      \"CreationTime\": \"Today\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"key\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"key\"}}}",
											"description": "(Required) JSON string containing SSH key name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"key\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"key\"}}}",
											"description": "(Required) JSON string containing SSH key name"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "exportSSHKey",
			"item": [
				{
					"name": "Export SSH Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/exportSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"key\",\"keyExportType\":\"public\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"exportSSHKey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"key\",\"keyExportType\":\"public\"}}}",
									"description": "(Required) JSON string containing SSH key name and optional export type"
								}
							]
						},
						"description": "Exports a particular SSH key"
					},
					"response": [
						{
							"name": "SSH key file",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"key\",\"keyExportType\":\"public\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"key\",\"keyExportType\":\"public\"}}}",
											"description": "(Required) JSON string containing SSH key name and optional export type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "sit enim"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"key\",\"keyExportType\":\"public\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"key\",\"keyExportType\":\"public\"}}}",
											"description": "(Required) JSON string containing SSH key name and optional export type"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"key\",\"keyExportType\":\"public\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"key\",\"keyExportType\":\"public\"}}}",
											"description": "(Required) JSON string containing SSH key name and optional export type"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getSSHKeyPassphrase",
			"item": [
				{
					"name": "Get SSH Key Passphrase",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getSSHKeyPassphrase?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testKey\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getSSHKeyPassphrase"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"testKey\"}}}",
									"description": "(Required) JSON string containing SSH key name"
								}
							]
						},
						"description": "Gets the passphrase of an SSH key"
					},
					"response": [
						{
							"name": "SSH key passphrase fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHKeyPassphrase?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testKey\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHKeyPassphrase"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testKey\"}}}",
											"description": "(Required) JSON string containing SSH key name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Passphrase fetched successfully\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"GetSSHKeyPassphrase\",\n  \"details\": {\n    \"passphrase\": \"passphrase@321\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHKeyPassphrase?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testKey\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHKeyPassphrase"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testKey\"}}}",
											"description": "(Required) JSON string containing SSH key name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHKeyPassphrase?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testKey\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHKeyPassphrase"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testKey\"}}}",
											"description": "(Required) JSON string containing SSH key name"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getSSHkeysforuser",
			"item": [
				{
					"name": "Get SSH Keys for User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getSSHkeysforuser?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getSSHkeysforuser"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
									"description": "(Required) JSON string containing user name and resource name"
								}
							]
						},
						"description": "Gets all the SSH keys associated with a particular user"
					},
					"response": [
						{
							"name": "SSH keys for user fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHkeysforuser?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHkeysforuser"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
											"description": "(Required) JSON string containing user name and resource name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetSSHKeysForUser\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"SSH keys for user test of resource pmp-centos6 fetched successfully\"\n  },\n  \"details\": \"testkey,testkey1\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHkeysforuser?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHkeysforuser"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
											"description": "(Required) JSON string containing user name and resource name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSHkeysforuser?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSHkeysforuser"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
											"description": "(Required) JSON string containing user name and resource name"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "enumerateusers",
			"item": [
				{
					"name": "Enumerate Users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/enumerateusers?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"enumerateusers"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
									"description": "(Required) JSON string containing user name and resource name"
								}
							]
						},
						"description": "Enumerates all users in a particular resource"
					},
					"response": [
						{
							"name": "User enumeration started",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/enumerateusers?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"enumerateusers"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
											"description": "(Required) JSON string containing user name and resource name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"EnumerateUsers\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"User enumeration started\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/enumerateusers?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"enumerateusers"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
											"description": "(Required) JSON string containing user name and resource name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/enumerateusers?INPUT_DATA={\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"enumerateusers"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"userName\":\"test\",\"resourceName\":\"172.21.147.80\"}}}",
											"description": "(Required) JSON string containing user name and resource name"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getAllSSHUsers",
			"item": [
				{
					"name": "Get All SSH Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getAllSSHUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getAllSSHUsers"
							]
						},
						"description": "Gets all the discovered SSH users"
					},
					"response": [
						{
							"name": "SSH users fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSHUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSHUsers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetAllSSHUsers\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"All SSH Users fetched successfully\"\n  },\n  \"totalRows\": 2,\n  \"details\": [\n    {\n      \"UserName\": \"test\",\n      \"ResourceName\": \"172.21.147.80\"\n    },\n    {\n      \"UserName\": \"test\",\n      \"ResourceName\": \"172.21.147.80\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSHUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSHUsers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getAllAssociatedUsers",
			"item": [
				{
					"name": "Get All Associated Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getAllAssociatedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getAllAssociatedUsers"
							]
						},
						"description": "Fetches all the users associated with SSH keys"
					},
					"response": [
						{
							"name": "Associated users fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllAssociatedUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllAssociatedUsers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"All associated users fetched successfully\"\n  },\n  \"totalRows\": 1,\n  \"details\": [\n    {\n      \"UserName\": \"test\",\n      \"ResourceName\": \"172.21.147.80\"\n    },\n    {\n      \"UserName\": \"test\",\n      \"ResourceName\": \"172.21.147.80\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllAssociatedUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllAssociatedUsers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getAllKeyStoreKeys",
			"item": [
				{
					"name": "Get All Key Vault Keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getAllKeyStoreKeys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getAllKeyStoreKeys"
							]
						},
						"description": "Fetches all the keys from the key vault"
					},
					"response": [
						{
							"name": "Key vault keys fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllKeyStoreKeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllKeyStoreKeys"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"getAllKeyStoreKeys\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"All KeyStore Keys fetched successfully\"\n  },\n  \"totalRows\": 1,\n  \"details\": [\n    {\n      \"Description\": \"test\",\n      \"Key Name\": \"cert.cer\",\n      \"Created Time\": \"Sep 27, 2016 12:27\",\n      \"Datacenter\": \"Central US\",\n      \"Instance Name\": \"test\",\n      \"Key Type\": \"test\",\n      \"Created By\": \"admin\",\n      \"Key Store ID\": 1\n    },\n    {\n      \"Description\": \"test\",\n      \"Key Name\": \"cert.cer\",\n      \"Created Time\": \"Sep 27, 2016 12:27\",\n      \"Datacenter\": \"Central US\",\n      \"Instance Name\": \"test\",\n      \"Key Type\": \"test\",\n      \"Created By\": \"admin\",\n      \"Key Store ID\": 1\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllKeyStoreKeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllKeyStoreKeys"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "exportKeyStoreKey",
			"item": [
				{
					"name": "Export Key Vault Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/exportKeyStoreKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"exportKeyStoreKey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
									"description": "(Required) JSON string containing key name"
								}
							]
						},
						"description": "Exports a particular key from the key vault"
					},
					"response": [
						{
							"name": "Key file",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportKeyStoreKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportKeyStoreKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
											"description": "(Required) JSON string containing key name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "sit enim"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportKeyStoreKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportKeyStoreKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
											"description": "(Required) JSON string containing key name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportKeyStoreKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportKeyStoreKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
											"description": "(Required) JSON string containing key name"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "deleteKeyStoreKey",
			"item": [
				{
					"name": "Delete Key Vault Key",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deleteKeyStoreKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deleteKeyStoreKey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
									"description": "(Required) JSON string containing key name"
								}
							]
						},
						"description": "Deletes a key from the key vault"
					},
					"response": [
						{
							"name": "Key deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteKeyStoreKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteKeyStoreKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
											"description": "(Required) JSON string containing key name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"DeleteKeyStoreKey\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"Key Store keys deleted successfully\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteKeyStoreKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteKeyStoreKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
											"description": "(Required) JSON string containing key name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteKeyStoreKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteKeyStoreKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"cert.cer\"}}}",
											"description": "(Required) JSON string containing key name"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "addKeyStoreKey",
			"item": [
				{
					"name": "Add Key Vault Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"brin.cer\",\"description\":\"test\",\"datacenter\":\"test\",\"passphrase\":\"test\",\"keyType\":\"test\",\"instanceName\":\"test\"}}}",
									"description": "JSON string containing key details",
									"type": "text"
								},
								{
									"key": "File",
									"description": "Key file to upload",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/addKeyStoreKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addKeyStoreKey"
							]
						},
						"description": "Adds a new key to the key vault"
					},
					"response": [
						{
							"name": "Key added successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"brin.cer\",\"description\":\"test\",\"datacenter\":\"test\",\"passphrase\":\"test\",\"keyType\":\"test\",\"instanceName\":\"test\"}}}",
											"description": "JSON string containing key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Key file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addKeyStoreKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addKeyStoreKey"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Status\": \"Success\",\n  \"Message\": \"Key added to key store successfully\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"brin.cer\",\"description\":\"test\",\"datacenter\":\"test\",\"passphrase\":\"test\",\"keyType\":\"test\",\"instanceName\":\"test\"}}}",
											"description": "JSON string containing key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Key file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addKeyStoreKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addKeyStoreKey"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"brin.cer\",\"description\":\"test\",\"datacenter\":\"test\",\"passphrase\":\"test\",\"keyType\":\"test\",\"instanceName\":\"test\"}}}",
											"description": "JSON string containing key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Key file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addKeyStoreKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addKeyStoreKey"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "updateKeyStoreKey",
			"item": [
				{
					"name": "Update Key Vault Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"brin.cer\",\"description\":\"test\",\"datacenter\":\"test\",\"passphrase\":\"test\",\"keyType\":\"test\",\"instanceName\":\"test\"}}}",
									"description": "JSON string containing key details",
									"type": "text"
								},
								{
									"key": "File",
									"description": "Key file to upload",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/updateKeyStoreKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"updateKeyStoreKey"
							]
						},
						"description": "Updates a particular key vault key"
					},
					"response": [
						{
							"name": "Key updated successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"brin.cer\",\"description\":\"test\",\"datacenter\":\"test\",\"passphrase\":\"test\",\"keyType\":\"test\",\"instanceName\":\"test\"}}}",
											"description": "JSON string containing key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Key file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/updateKeyStoreKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateKeyStoreKey"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Status\": \"Success\",\n  \"Message\": \"Key Store key updated successfully\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"brin.cer\",\"description\":\"test\",\"datacenter\":\"test\",\"passphrase\":\"test\",\"keyType\":\"test\",\"instanceName\":\"test\"}}}",
											"description": "JSON string containing key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Key file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/updateKeyStoreKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateKeyStoreKey"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"brin.cer\",\"description\":\"test\",\"datacenter\":\"test\",\"passphrase\":\"test\",\"keyType\":\"test\",\"instanceName\":\"test\"}}}",
											"description": "JSON string containing key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Key file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/updateKeyStoreKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateKeyStoreKey"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getCertificate",
			"item": [
				{
					"name": "Get Certificate",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"XXXXXXXXXXXXXX\",\"fileType\":\"PEM\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getCertificate"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"XXXXXXXXXXXXXX\",\"fileType\":\"PEM\"}}}",
									"description": "(Required) JSON string containing operation details"
								}
							]
						},
						"description": "Obtains a certificate from KMP's certificate repository"
					},
					"response": [
						{
							"name": "Certificate file",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"XXXXXXXXXXXXXX\",\"fileType\":\"PEM\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"XXXXXXXXXXXXXX\",\"fileType\":\"PEM\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "sit enim"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"XXXXXXXXXXXXXX\",\"fileType\":\"PEM\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"XXXXXXXXXXXXXX\",\"fileType\":\"PEM\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"XXXXXXXXXXXXXX\",\"fileType\":\"PEM\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"XXXXXXXXXXXXXX\",\"fileType\":\"PEM\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getAllSSLCertificates",
			"item": [
				{
					"name": "Get All Certificates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getAllSSLCertificates?INPUT_DATA={\"operation\":{\"Details\":{\"withExpiryDaysLessThan\":\"500\",\"withKeyLength\":\"2048\",\"withSignatureAlgorithm\":\"SHA256\",\"withPrivateKey\":\"true\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getAllSSLCertificates"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"withExpiryDaysLessThan\":\"500\",\"withKeyLength\":\"2048\",\"withSignatureAlgorithm\":\"SHA256\",\"withPrivateKey\":\"true\"}}}",
									"description": "JSON string containing filter parameters"
								}
							]
						},
						"description": "Obtains all certificates from KMP's certificate repository with optional filters"
					},
					"response": [
						{
							"name": "List of certificates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSLCertificates?INPUT_DATA={\"operation\":{\"Details\":{\"withExpiryDaysLessThan\":\"500\",\"withKeyLength\":\"2048\",\"withSignatureAlgorithm\":\"SHA256\",\"withPrivateKey\":\"true\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSLCertificates"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"withExpiryDaysLessThan\":\"500\",\"withKeyLength\":\"2048\",\"withSignatureAlgorithm\":\"SHA256\",\"withPrivateKey\":\"true\"}}}",
											"description": "JSON string containing filter parameters"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetAllSSLCertificates\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"All SSL Certificates fetched successfully\"\n  },\n  \"totalRows\": 2,\n  \"details\": [\n    {\n      \"CertID\": 1,\n      \"DNS Name/FQDN\": \"example.com\",\n      \"Port\": 443,\n      \"Common Name\": \"*.example.com\",\n      \"Issuer\": \"GeoTrust Inc.\",\n      \"FromDate\": \"Oct 13, 2020\",\n      \"ExpiryDate\": \"Aug 27, 2022\",\n      \"KeyStrength\": \"2048\",\n      \"SignatureAlgorithm\": \"SHA256withRSA\",\n      \"Created By\": \"admin\",\n      \"Expiry Notification Email\": \"\",\n      \"Description\": \"Test certificate\"\n    },\n    {\n      \"CertID\": 1,\n      \"DNS Name/FQDN\": \"example.com\",\n      \"Port\": 443,\n      \"Common Name\": \"*.example.com\",\n      \"Issuer\": \"GeoTrust Inc.\",\n      \"FromDate\": \"Oct 13, 2020\",\n      \"ExpiryDate\": \"Aug 27, 2022\",\n      \"KeyStrength\": \"2048\",\n      \"SignatureAlgorithm\": \"SHA256withRSA\",\n      \"Created By\": \"admin\",\n      \"Expiry Notification Email\": \"\",\n      \"Description\": \"Test certificate\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSLCertificates?INPUT_DATA={\"operation\":{\"Details\":{\"withExpiryDaysLessThan\":\"500\",\"withKeyLength\":\"2048\",\"withSignatureAlgorithm\":\"SHA256\",\"withPrivateKey\":\"true\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSLCertificates"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"withExpiryDaysLessThan\":\"500\",\"withKeyLength\":\"2048\",\"withSignatureAlgorithm\":\"SHA256\",\"withPrivateKey\":\"true\"}}}",
											"description": "JSON string containing filter parameters"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getAllSSLCertsExpiryDate",
			"item": [
				{
					"name": "Get All Certificate Expiry",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getAllSSLCertsExpiryDate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getAllSSLCertsExpiryDate"
							]
						},
						"description": "Get the expiry dates of all the certificates"
					},
					"response": [
						{
							"name": "Certificate expiry list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSLCertsExpiryDate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSLCertsExpiryDate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetAllSSLCertificatesExpiryDate\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"Certificates expiry date fetched successfully\"\n  },\n  \"totalRows\": 2,\n  \"details\": [\n    {\n      \"Common Name\": \"*.example.com\",\n      \"ExpiryDate\": \"Aug 27, 2022\"\n    },\n    {\n      \"Common Name\": \"*.example.com\",\n      \"ExpiryDate\": \"Aug 27, 2022\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAllSSLCertsExpiryDate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAllSSLCertsExpiryDate"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getCertificateDetails",
			"item": [
				{
					"name": "Get Certificate Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getCertificateDetails?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"xxxxxxxxxxxx\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getCertificateDetails"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"xxxxxxxxxxxx\"}}}",
									"description": "(Required) JSON string containing operation details"
								}
							]
						},
						"description": "Get the details of a particular certificate"
					},
					"response": [
						{
							"name": "Certificate details",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificateDetails?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"xxxxxxxxxxxx\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificateDetails"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"xxxxxxxxxxxx\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetCertificateDetails\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"Details of certificate *.zoho.com fetched successfully\"\n  },\n  \"details\": [\n    {\n      \"certtype\": \"Domain\",\n      \"certificateTemplate\": \"N/A\",\n      \"endpoint\": {\n        \"hostName\": \"*.example.com\",\n        \"port\": \"443\",\n        \"expiry_date\": \"2022-04-30 05:29:59.0\",\n        \"from_date\": \"2020-07-02 05:30:00.0\",\n        \"certSignAlg\": \"SHA256withRSA\",\n        \"Sans\": \"*.example.com,example.com\",\n        \"serial\": \"8c0b04e91a1796d86d1de5e89c8b3c5c\",\n        \"fingerPrint\": \"aeecb6227dc8adef18a8fb99465739996e2782a8\",\n        \"keyalg\": \"RSA\",\n        \"PublicKeyLength\": 2048,\n        \"PrivateKey\": false,\n        \"isAWS\": false\n      },\n      \"isCertInstalledMulipleServers\": false,\n      \"issuer\": {\n        \"cname\": \"Sectigo RSA Domain Validation Secure Server CA\",\n        \"org\": \"Sectigo Limited\",\n        \"orgunit\": \"-\"\n      },\n      \"issuedto\": {\n        \"cname\": \"*.example.com\",\n        \"org\": \"-\",\n        \"orgunit\": \"Domain Control Validated\"\n      },\n      \"intermediate\": {},\n      \"ipaddress\": \"192.168.1.1\",\n      \"CertificateId\": \"302\"\n    },\n    {\n      \"certtype\": \"Domain\",\n      \"certificateTemplate\": \"N/A\",\n      \"endpoint\": {\n        \"hostName\": \"*.example.com\",\n        \"port\": \"443\",\n        \"expiry_date\": \"2022-04-30 05:29:59.0\",\n        \"from_date\": \"2020-07-02 05:30:00.0\",\n        \"certSignAlg\": \"SHA256withRSA\",\n        \"Sans\": \"*.example.com,example.com\",\n        \"serial\": \"8c0b04e91a1796d86d1de5e89c8b3c5c\",\n        \"fingerPrint\": \"aeecb6227dc8adef18a8fb99465739996e2782a8\",\n        \"keyalg\": \"RSA\",\n        \"PublicKeyLength\": 2048,\n        \"PrivateKey\": false,\n        \"isAWS\": false\n      },\n      \"isCertInstalledMulipleServers\": false,\n      \"issuer\": {\n        \"cname\": \"Sectigo RSA Domain Validation Secure Server CA\",\n        \"org\": \"Sectigo Limited\",\n        \"orgunit\": \"-\"\n      },\n      \"issuedto\": {\n        \"cname\": \"*.example.com\",\n        \"org\": \"-\",\n        \"orgunit\": \"Domain Control Validated\"\n      },\n      \"intermediate\": {},\n      \"ipaddress\": \"192.168.1.1\",\n      \"CertificateId\": \"302\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificateDetails?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"xxxxxxxxxxxx\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificateDetails"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"xxxxxxxxxxxx\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificateDetails?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"xxxxxxxxxxxx\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificateDetails"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"*.google.com\",\"serial_number\":\"xxxxxxxxxxxx\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getCertificateKeyStore",
			"item": [
				{
					"name": "Get Certificate Keystore",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getCertificateKeyStore?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getCertificateKeyStore"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
									"description": "(Required) JSON string containing operation details"
								}
							]
						},
						"description": "Get the key store file of a particular certificate"
					},
					"response": [
						{
							"name": "Certificate KeyStore file",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificateKeyStore?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificateKeyStore"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "sit enim"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificateKeyStore?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificateKeyStore"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificateKeyStore?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificateKeyStore"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
											"description": "(Required) JSON string containing operation details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "updateSSLCertificateDetails",
			"item": [
				{
					"name": "Update Certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/updateSSLCertificateDetails?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXe433d\",\"description\":\"testdescription\",\"dns_name\":\"dnsname\",\"email_address\":\"test@example.com\",\"isAutoDeploy\":\"true\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"updateSSLCertificateDetails"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXe433d\",\"description\":\"testdescription\",\"dns_name\":\"dnsname\",\"email_address\":\"test@example.com\",\"isAutoDeploy\":\"true\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
									"description": "(Required) JSON string containing update details"
								}
							]
						},
						"description": "Update an SSL certificate in the KMP repository"
					},
					"response": [
						{
							"name": "Update success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updateSSLCertificateDetails?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXe433d\",\"description\":\"testdescription\",\"dns_name\":\"dnsname\",\"email_address\":\"test@example.com\",\"isAutoDeploy\":\"true\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateSSLCertificateDetails"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXe433d\",\"description\":\"testdescription\",\"dns_name\":\"dnsname\",\"email_address\":\"test@example.com\",\"isAutoDeploy\":\"true\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
											"description": "(Required) JSON string containing update details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"SSL Certificate apitest details updated successfully.\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"updateSslDetails\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updateSSLCertificateDetails?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXe433d\",\"description\":\"testdescription\",\"dns_name\":\"dnsname\",\"email_address\":\"test@example.com\",\"isAutoDeploy\":\"true\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateSSLCertificateDetails"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXe433d\",\"description\":\"testdescription\",\"dns_name\":\"dnsname\",\"email_address\":\"test@example.com\",\"isAutoDeploy\":\"true\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
											"description": "(Required) JSON string containing update details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updateSSLCertificateDetails?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXe433d\",\"description\":\"testdescription\",\"dns_name\":\"dnsname\",\"email_address\":\"test@example.com\",\"isAutoDeploy\":\"true\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateSSLCertificateDetails"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXe433d\",\"description\":\"testdescription\",\"dns_name\":\"dnsname\",\"email_address\":\"test@example.com\",\"isAutoDeploy\":\"true\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
											"description": "(Required) JSON string containing update details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "deleteCertificate",
			"item": [
				{
					"name": "Delete Certificate",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deleteCertificate?INPUT_DATA={\"operation\": {\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXccda\",\"exclude_certificate\":\"true\",\"reason\":\"Test\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deleteCertificate"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\": {\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXccda\",\"exclude_certificate\":\"true\",\"reason\":\"Test\"}}}",
									"description": "(Required) JSON string containing certificate details"
								}
							]
						},
						"description": "Delete an SSL certificate from the KMP repository"
					},
					"response": [
						{
							"name": "Delete success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteCertificate?INPUT_DATA={\"operation\": {\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXccda\",\"exclude_certificate\":\"true\",\"reason\":\"Test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\": {\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXccda\",\"exclude_certificate\":\"true\",\"reason\":\"Test\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Certificate apitest deleted successfully.\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"DeleteCertificate\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteCertificate?INPUT_DATA={\"operation\": {\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXccda\",\"exclude_certificate\":\"true\",\"reason\":\"Test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\": {\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXccda\",\"exclude_certificate\":\"true\",\"reason\":\"Test\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteCertificate?INPUT_DATA={\"operation\": {\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXccda\",\"exclude_certificate\":\"true\",\"reason\":\"Test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\": {\"Details\":{\"common_name\":\"apitest\",\"serial_number\":\"XXXXXXXccda\",\"exclude_certificate\":\"true\",\"reason\":\"Test\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "sslCertSingleDiscovery",
			"item": [
				{
					"name": "Perform Resource Discovery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sslCertSingleDiscovery?INPUT_DATA={\"operation\":{\"Details\":{\"HOST\":\"hostname\",\"TIMEOUT\":\"300\",\"PORT\":\"6565\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sslCertSingleDiscovery"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"HOST\":\"hostname\",\"TIMEOUT\":\"300\",\"PORT\":\"6565\"}}}",
									"description": "(Required) JSON string containing host details"
								}
							]
						},
						"description": "Discover a particular resource for SSL certificates"
					},
					"response": [
						{
							"name": "Discovery result",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertSingleDiscovery?INPUT_DATA={\"operation\":{\"Details\":{\"HOST\":\"hostname\",\"TIMEOUT\":\"300\",\"PORT\":\"6565\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertSingleDiscovery"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"HOST\":\"hostname\",\"TIMEOUT\":\"300\",\"PORT\":\"6565\"}}}",
											"description": "(Required) JSON string containing host details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"Get SSL Discovery\",\n  \"totalRows\": 1,\n  \"details\": {\n    \"dolore_db5\": [\n      \"SUCCESS\",\n      \"SSL Certificate already available, *.zoho.com certificate found at port 443\"\n    ]\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertSingleDiscovery?INPUT_DATA={\"operation\":{\"Details\":{\"HOST\":\"hostname\",\"TIMEOUT\":\"300\",\"PORT\":\"6565\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertSingleDiscovery"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"HOST\":\"hostname\",\"TIMEOUT\":\"300\",\"PORT\":\"6565\"}}}",
											"description": "(Required) JSON string containing host details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertSingleDiscovery?INPUT_DATA={\"operation\":{\"Details\":{\"HOST\":\"hostname\",\"TIMEOUT\":\"300\",\"PORT\":\"6565\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertSingleDiscovery"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"HOST\":\"hostname\",\"TIMEOUT\":\"300\",\"PORT\":\"6565\"}}}",
											"description": "(Required) JSON string containing host details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "sslCertRangeDiscovery",
			"item": [
				{
					"name": "Perform Resource Discovery for IP Range",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sslCertRangeDiscovery?INPUT_DATA={\"operation\":{\"Details\":{\"StartIpAddress\":\"192.168.216.0\",\"EndIpAddress\":\"192.168.216.3\",\"TIMEOUT\":\"3\",\"PORT\":\"443\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sslCertRangeDiscovery"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"StartIpAddress\":\"192.168.216.0\",\"EndIpAddress\":\"192.168.216.3\",\"TIMEOUT\":\"3\",\"PORT\":\"443\"}}}",
									"description": "(Required) JSON string containing IP range details"
								}
							]
						},
						"description": "Discover a set of resources for SSL certificates based on IP range"
					},
					"response": [
						{
							"name": "Discovery result",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertRangeDiscovery?INPUT_DATA={\"operation\":{\"Details\":{\"StartIpAddress\":\"192.168.216.0\",\"EndIpAddress\":\"192.168.216.3\",\"TIMEOUT\":\"3\",\"PORT\":\"443\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertRangeDiscovery"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"StartIpAddress\":\"192.168.216.0\",\"EndIpAddress\":\"192.168.216.3\",\"TIMEOUT\":\"3\",\"PORT\":\"443\"}}}",
											"description": "(Required) JSON string containing IP range details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"Get SSL Discovery\",\n  \"totalRows\": 4,\n  \"details\": {\n    \"laborum333\": [\n      \"FAILURE\",\n      \"Connection timed out,no certificate found at port 443\"\n    ],\n    \"ad_8e\": [\n      \"FAILURE\",\n      \"Connection timed out,no certificate found at port 443\"\n    ]\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertRangeDiscovery?INPUT_DATA={\"operation\":{\"Details\":{\"StartIpAddress\":\"192.168.216.0\",\"EndIpAddress\":\"192.168.216.3\",\"TIMEOUT\":\"3\",\"PORT\":\"443\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertRangeDiscovery"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"StartIpAddress\":\"192.168.216.0\",\"EndIpAddress\":\"192.168.216.3\",\"TIMEOUT\":\"3\",\"PORT\":\"443\"}}}",
											"description": "(Required) JSON string containing IP range details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sslCertRangeDiscovery?INPUT_DATA={\"operation\":{\"Details\":{\"StartIpAddress\":\"192.168.216.0\",\"EndIpAddress\":\"192.168.216.3\",\"TIMEOUT\":\"3\",\"PORT\":\"443\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertRangeDiscovery"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"StartIpAddress\":\"192.168.216.0\",\"EndIpAddress\":\"192.168.216.3\",\"TIMEOUT\":\"3\",\"PORT\":\"443\"}}}",
											"description": "(Required) JSON string containing IP range details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "sslCertFileBasedDiscovery",
			"item": [
				{
					"name": "Discover SSL in Bulk from Files",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"FileName\":\"sslDiscoveryInputFile.txt\",\"TIMEOUT\":\"3\",\"PORT\":443}}}",
									"description": "JSON string containing file details",
									"type": "text"
								},
								{
									"key": "File",
									"description": "File containing hosts to discover",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/sslCertFileBasedDiscovery",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sslCertFileBasedDiscovery"
							]
						},
						"description": "Perform SSL discovery in bulk from files"
					},
					"response": [
						{
							"name": "Discovery result",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"FileName\":\"sslDiscoveryInputFile.txt\",\"TIMEOUT\":\"3\",\"PORT\":443}}}",
											"description": "JSON string containing file details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "File containing hosts to discover",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sslCertFileBasedDiscovery",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertFileBasedDiscovery"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"SSL discovery completed successfully\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"Get SSL Discovery\",\n  \"details\": {\n    \"in5c\": [\n      \"FAILURE\",\n      \"Connection timed out,no certificate found at port 443\"\n    ]\n  },\n  \"totalRows\": 3\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"FileName\":\"sslDiscoveryInputFile.txt\",\"TIMEOUT\":\"3\",\"PORT\":443}}}",
											"description": "JSON string containing file details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "File containing hosts to discover",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sslCertFileBasedDiscovery",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertFileBasedDiscovery"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"FileName\":\"sslDiscoveryInputFile.txt\",\"TIMEOUT\":\"3\",\"PORT\":443}}}",
											"description": "JSON string containing file details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "File containing hosts to discover",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/sslCertFileBasedDiscovery",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sslCertFileBasedDiscovery"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "createCSR",
			"item": [
				{
					"name": "Create CSR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/createCSR?INPUT_DATA={\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"createCSR"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
									"description": "(Required) JSON string containing CSR details"
								}
							]
						},
						"description": "Create a certificate signing request"
					},
					"response": [
						{
							"name": "CSR created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createCSR?INPUT_DATA={\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
											"description": "(Required) JSON string containing CSR details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"CreateCertificate\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"CSR saved successfully\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createCSR?INPUT_DATA={\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
											"description": "(Required) JSON string containing CSR details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createCSR?INPUT_DATA={\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
											"description": "(Required) JSON string containing CSR details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getCSRList",
			"item": [
				{
					"name": "Get CSR List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getCSRList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getCSRList"
							]
						},
						"description": "Get list of certificate signing requests"
					},
					"response": [
						{
							"name": "CSR list fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCSRList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCSRList"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"GetCSRList\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"Fetched all CSRs successfully\"\n  },\n  \"totalRows\": 1,\n  \"GeneratedList\": [\n    {\n      \"CREATED_BY\": \"admin\",\n      \"KEYALGORITHM\": \"RSA\",\n      \"KEYSTORE_TYPE\": \"JKS\",\n      \"isPassword\": true,\n      \"CSR_ID\": 1,\n      \"CREATED_DATE\": \"May 15, 2020 19:51\",\n      \"LOGIN_ID\": 301,\n      \"KEY_STRENGTH\": 2048,\n      \"DOMAIN_NAME\": \"testcsr\",\n      \"VALIDITY\": \"30\",\n      \"SIGNATURE_ALGORITHM\": \"SHA256withRSA\"\n    },\n    {\n      \"CREATED_BY\": \"admin\",\n      \"KEYALGORITHM\": \"RSA\",\n      \"KEYSTORE_TYPE\": \"JKS\",\n      \"isPassword\": true,\n      \"CSR_ID\": 1,\n      \"CREATED_DATE\": \"May 15, 2020 19:51\",\n      \"LOGIN_ID\": 301,\n      \"KEY_STRENGTH\": 2048,\n      \"DOMAIN_NAME\": \"testcsr\",\n      \"VALIDITY\": \"30\",\n      \"SIGNATURE_ALGORITHM\": \"SHA256withRSA\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCSRList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCSRList"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "importCSR",
			"item": [
				{
					"name": "Import CSR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "CSR",
									"description": "CSR file to import",
									"type": "file",
									"src": []
								},
								{
									"key": "Key",
									"description": "Key file (optional)",
									"type": "file",
									"src": []
								},
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"password\":\"Test@123\",\"Email\":\"test@mail.com\"}}}",
									"description": "JSON string containing import details",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/importCSR",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"importCSR"
							]
						},
						"description": "Import the list of CSRs available in the request list"
					},
					"response": [
						{
							"name": "CSR imported successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CSR",
											"description": "CSR file to import",
											"type": "file",
											"src": []
										},
										{
											"key": "Key",
											"description": "Key file (optional)",
											"type": "file",
											"src": []
										},
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"password\":\"Test@123\",\"Email\":\"test@mail.com\"}}}",
											"description": "JSON string containing import details",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/importCSR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"importCSR"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"CSR demo.test.com imported successfully.\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"importCSR\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CSR",
											"description": "CSR file to import",
											"type": "file",
											"src": []
										},
										{
											"key": "Key",
											"description": "Key file (optional)",
											"type": "file",
											"src": []
										},
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"password\":\"Test@123\",\"Email\":\"test@mail.com\"}}}",
											"description": "JSON string containing import details",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/importCSR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"importCSR"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CSR",
											"description": "CSR file to import",
											"type": "file",
											"src": []
										},
										{
											"key": "Key",
											"description": "Key file (optional)",
											"type": "file",
											"src": []
										},
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"password\":\"Test@123\",\"Email\":\"test@mail.com\"}}}",
											"description": "JSON string containing import details",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/importCSR",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"importCSR"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "signCSR",
			"item": [
				{
					"name": "Sign CSR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/signCSR?INPUT_DATA={\"operation\":{\"Details\":{\"serverName\":\"kmp-w12r2-1\",\"caName\":\"kmp-w12r2-1-ca\",\"templateName\":\"DomainController\",\"CSR_ID\":\"1\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"signCSR"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"serverName\":\"kmp-w12r2-1\",\"caName\":\"kmp-w12r2-1-ca\",\"templateName\":\"DomainController\",\"CSR_ID\":\"1\"}}}",
									"description": "(Required) JSON string containing signing details"
								}
							]
						},
						"description": "Sign a certificate signing request"
					},
					"response": [
						{
							"name": "CSR signed successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/signCSR?INPUT_DATA={\"operation\":{\"Details\":{\"serverName\":\"kmp-w12r2-1\",\"caName\":\"kmp-w12r2-1-ca\",\"templateName\":\"DomainController\",\"CSR_ID\":\"1\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"serverName\":\"kmp-w12r2-1\",\"caName\":\"kmp-w12r2-1-ca\",\"templateName\":\"DomainController\",\"CSR_ID\":\"1\"}}}",
											"description": "(Required) JSON string containing signing details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Certificate csr successfully signed with test.\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"SignCSR\",\n  \"details\": [\n    {\n      \"commonName\": \"test\",\n      \"Certificate_ID\": 3301,\n      \"serialNumber\": \"bd865c93\"\n    },\n    {\n      \"commonName\": \"test\",\n      \"Certificate_ID\": 3301,\n      \"serialNumber\": \"bd865c93\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/signCSR?INPUT_DATA={\"operation\":{\"Details\":{\"serverName\":\"kmp-w12r2-1\",\"caName\":\"kmp-w12r2-1-ca\",\"templateName\":\"DomainController\",\"CSR_ID\":\"1\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"serverName\":\"kmp-w12r2-1\",\"caName\":\"kmp-w12r2-1-ca\",\"templateName\":\"DomainController\",\"CSR_ID\":\"1\"}}}",
											"description": "(Required) JSON string containing signing details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/signCSR?INPUT_DATA={\"operation\":{\"Details\":{\"serverName\":\"kmp-w12r2-1\",\"caName\":\"kmp-w12r2-1-ca\",\"templateName\":\"DomainController\",\"CSR_ID\":\"1\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"signCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"serverName\":\"kmp-w12r2-1\",\"caName\":\"kmp-w12r2-1-ca\",\"templateName\":\"DomainController\",\"CSR_ID\":\"1\"}}}",
											"description": "(Required) JSON string containing signing details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "exportCSR",
			"item": [
				{
					"name": "Export CSR",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/exportCSR?INPUT_DATA={\"operation\":{\"Details\":{\"CSR_ID\":\"304\",\"fileType\":\"CSR\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"exportCSR"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"CSR_ID\":\"304\",\"fileType\":\"CSR\"}}}",
									"description": "(Required) JSON string containing CSR ID and file type"
								}
							]
						},
						"description": "Export a CSR from the Key Manager Plus repository"
					},
					"response": [
						{
							"name": "CSR file",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportCSR?INPUT_DATA={\"operation\":{\"Details\":{\"CSR_ID\":\"304\",\"fileType\":\"CSR\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CSR_ID\":\"304\",\"fileType\":\"CSR\"}}}",
											"description": "(Required) JSON string containing CSR ID and file type"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "sit enim"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportCSR?INPUT_DATA={\"operation\":{\"Details\":{\"CSR_ID\":\"304\",\"fileType\":\"CSR\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CSR_ID\":\"304\",\"fileType\":\"CSR\"}}}",
											"description": "(Required) JSON string containing CSR ID and file type"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/exportCSR?INPUT_DATA={\"operation\":{\"Details\":{\"CSR_ID\":\"304\",\"fileType\":\"CSR\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"exportCSR"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CSR_ID\":\"304\",\"fileType\":\"CSR\"}}}",
											"description": "(Required) JSON string containing CSR ID and file type"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "createCertificate",
			"item": [
				{
					"name": "Create Certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/createCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"createCertificate"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
									"description": "(Required) JSON string containing certificate details"
								}
							]
						},
						"description": "Create an SSL certificate"
					},
					"response": [
						{
							"name": "Certificate created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Certificate saved successfully\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"CreateCertificate\",\n  \"details\": [\n    {\n      \"SSL_RESOURCEID\": 3\n    },\n    {\n      \"SSL_RESOURCEID\": 3\n    }\n  ],\n  \"totalRows\": 1\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/createCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"createCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"CNAME\":\"mytestcert\",\"ALT_NAMES\":\"test\",\"ORGUNIT\":\"hhh\",\"ORG\":\"h\",\"LOCATION\":\"hh\",\"STATE\":\"h\",\"COUNTRY\":\"hh\",\"PASSWORD\":\"bbbbbbbb\",\"VALIDITY_TYPE\":\"88\",\"VALIDITY\":\"888\",\"ALG\":\"RSA\",\"LEN\":\"4096\",\"SIGALG\":\"SHA256\",\"StoreType\":\"PKCS12\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "addSSHKey",
			"item": [
				{
					"name": "Import SSH Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"passphrase\":\"passtrix\"}}}",
									"description": "JSON string containing SSH key details",
									"type": "text"
								},
								{
									"key": "File",
									"description": "SSH key file to import",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/addSSHKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addSSHKey"
							]
						},
						"description": "Import a SSH key"
					},
					"response": [
						{
							"name": "SSH key imported successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"passphrase\":\"passtrix\"}}}",
											"description": "JSON string containing SSH key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "SSH key file to import",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addSSHKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addSSHKey"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"addSSHKey\",\n  \"result\": {\n    \"status\": \"SUCCESS\",\n    \"message\": \"Key imported successfully\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"passphrase\":\"passtrix\"}}}",
											"description": "JSON string containing SSH key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "SSH key file to import",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addSSHKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addSSHKey"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"passphrase\":\"passtrix\"}}}",
											"description": "JSON string containing SSH key details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "SSH key file to import",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addSSHKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addSSHKey"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "associateKey",
			"item": [
				{
					"name": "Associate SSH Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/associateKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"associateKey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
									"description": "(Required) JSON string containing association details"
								}
							]
						},
						"description": "Associate a SSH key with a user and resource"
					},
					"response": [
						{
							"name": "SSH key associated successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/associateKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"associateKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
											"description": "(Required) JSON string containing association details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"associateKey\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"Key associated successfully\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/associateKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"associateKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
											"description": "(Required) JSON string containing association details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/associateKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"associateKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
											"description": "(Required) JSON string containing association details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "dissociateKey",
			"item": [
				{
					"name": "Dissociate SSH Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dissociateKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dissociateKey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
									"description": "(Required) JSON string containing dissociation details"
								}
							]
						},
						"description": "Dissociate a SSH key from a user and resource"
					},
					"response": [
						{
							"name": "SSH key dissociated successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dissociateKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dissociateKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
											"description": "(Required) JSON string containing dissociation details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"dissociateKey\",\n  \"result\": {\n    \"status\": \"SUCCESS\",\n    \"message\": \"Key dissociated successfully.\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dissociateKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dissociateKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
											"description": "(Required) JSON string containing dissociation details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dissociateKey?INPUT_DATA={\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dissociateKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"keyName\":\"testkey\",\"resourceName\":\"test.csez.zohocorpin.com\",\"userName\":\"test\"}}}",
											"description": "(Required) JSON string containing dissociation details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "addCertificate",
			"item": [
				{
					"name": "Add Certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"fileType\":\"KEYSTORE\",\"PASSWORD\":\"PASSWORD\"}}}",
									"description": "JSON string containing certificate details",
									"type": "text"
								},
								{
									"key": "File",
									"description": "Certificate file to add",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/addCertificate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"addCertificate"
							]
						},
						"description": "Add an SSL certificate to Key Manager Plus certificate repository"
					},
					"response": [
						{
							"name": "Certificate added successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"fileType\":\"KEYSTORE\",\"PASSWORD\":\"PASSWORD\"}}}",
											"description": "JSON string containing certificate details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Certificate file to add",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addCertificate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addCertificate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"AddCertificate\",\n  \"result\": {\n    \"Status\": \"Success\",\n    \"Message\": \"Certificate newcert.com added successfully\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"fileType\":\"KEYSTORE\",\"PASSWORD\":\"PASSWORD\"}}}",
											"description": "JSON string containing certificate details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Certificate file to add",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addCertificate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addCertificate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"fileType\":\"KEYSTORE\",\"PASSWORD\":\"PASSWORD\"}}}",
											"description": "JSON string containing certificate details",
											"type": "text"
										},
										{
											"key": "File",
											"description": "Certificate file to add",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/addCertificate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"addCertificate"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "deployCertificate",
			"item": [
				{
					"name": "Deploy Certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deployCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"testcert\",\"serial_number\":\"xxxxxxxx\",\"serverName\":\"testmachine\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deployCertificate"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"common_name\":\"testcert\",\"serial_number\":\"xxxxxxxx\",\"serverName\":\"testmachine\"}}}",
									"description": "(Required) JSON string containing deployment details"
								}
							]
						},
						"description": "Deploy an SSL certificate"
					},
					"response": [
						{
							"name": "Certificate deployed successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"testcert\",\"serial_number\":\"xxxxxxxx\",\"serverName\":\"testmachine\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"testcert\",\"serial_number\":\"xxxxxxxx\",\"serverName\":\"testmachine\"}}}",
											"description": "(Required) JSON string containing deployment details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Certificate deployment is successful.\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"DeployCertificate\",\n  \"totalRows\": 1,\n  \"deployStatus\": [\n    {\n      \"server\": \"testmachine\",\n      \"message\": \"Certificate testcert of format CER and PFX deployed in testmachine successfully.\",\n      \"status\": \"Success\"\n    },\n    {\n      \"server\": \"testmachine\",\n      \"message\": \"Certificate testcert of format CER and PFX deployed in testmachine successfully.\",\n      \"status\": \"Success\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"testcert\",\"serial_number\":\"xxxxxxxx\",\"serverName\":\"testmachine\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"testcert\",\"serial_number\":\"xxxxxxxx\",\"serverName\":\"testmachine\"}}}",
											"description": "(Required) JSON string containing deployment details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deployCertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"testcert\",\"serial_number\":\"xxxxxxxx\",\"serverName\":\"testmachine\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deployCertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"testcert\",\"serial_number\":\"xxxxxxxx\",\"serverName\":\"testmachine\"}}}",
											"description": "(Required) JSON string containing deployment details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "deleteSSHKey",
			"item": [
				{
					"name": "Delete SSH Key",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/deleteSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"key_name\":\"newkey1\",\"withoutDisassociation\":\"true\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"deleteSSHKey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"key_name\":\"newkey1\",\"withoutDisassociation\":\"true\"}}}",
									"description": "(Required) JSON string containing key name and disassociation flag"
								}
							]
						},
						"description": "Delete a particular SSH key"
					},
					"response": [
						{
							"name": "SSH key deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"key_name\":\"newkey1\",\"withoutDisassociation\":\"true\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"key_name\":\"newkey1\",\"withoutDisassociation\":\"true\"}}}",
											"description": "(Required) JSON string containing key name and disassociation flag"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"DeleteSSHKey\",\n  \"result\": {\n    \"status\": \"Success\",\n    \"message\": \"SSH keys newkey1 deleted successfully\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"key_name\":\"newkey1\",\"withoutDisassociation\":\"true\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"key_name\":\"newkey1\",\"withoutDisassociation\":\"true\"}}}",
											"description": "(Required) JSON string containing key name and disassociation flag"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/deleteSSHKey?INPUT_DATA={\"operation\":{\"Details\":{\"key_name\":\"newkey1\",\"withoutDisassociation\":\"true\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"deleteSSHKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"key_name\":\"newkey1\",\"withoutDisassociation\":\"true\"}}}",
											"description": "(Required) JSON string containing key name and disassociation flag"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getCertificatePassphrase",
			"item": [
				{
					"name": "Get Certificate Private Key Passphrase",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getCertificatePassphrase?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getCertificatePassphrase"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
									"description": "(Required) JSON string containing certificate details"
								}
							]
						},
						"description": "Get the passphrase of a certificate private key"
					},
					"response": [
						{
							"name": "Certificate passphrase fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificatePassphrase?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificatePassphrase"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Private key passphrase of certificate mycert is fetched\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"GetCertificatePassphrase\",\n  \"details\": {\n    \"Passphrase\": \"SamplePassphrase\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificatePassphrase?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificatePassphrase"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getCertificatePassphrase?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getCertificatePassphrase"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"XXXXXXXXXXXXXX\"}}}",
											"description": "(Required) JSON string containing certificate details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getPGPKey",
			"item": [
				{
					"name": "Fetch PGP Keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getPGPKey?INPUT_DATA={\"operation\":{\"Details\":{\"User\":\"test (test) <tes@test.com>\",\"keyExportType\":\"public\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getPGPKey"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"User\":\"test (test) <tes@test.com>\",\"keyExportType\":\"public\"}}}",
									"description": "(Required) JSON string containing PGP key details"
								}
							]
						},
						"description": "Fetch public or private PGP keys"
					},
					"response": [
						{
							"name": "PGP key file",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getPGPKey?INPUT_DATA={\"operation\":{\"Details\":{\"User\":\"test (test) <tes@test.com>\",\"keyExportType\":\"public\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getPGPKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"User\":\"test (test) <tes@test.com>\",\"keyExportType\":\"public\"}}}",
											"description": "(Required) JSON string containing PGP key details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": "sit enim"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getPGPKey?INPUT_DATA={\"operation\":{\"Details\":{\"User\":\"test (test) <tes@test.com>\",\"keyExportType\":\"public\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getPGPKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"User\":\"test (test) <tes@test.com>\",\"keyExportType\":\"public\"}}}",
											"description": "(Required) JSON string containing PGP key details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getPGPKey?INPUT_DATA={\"operation\":{\"Details\":{\"User\":\"test (test) <tes@test.com>\",\"keyExportType\":\"public\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getPGPKey"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"User\":\"test (test) <tes@test.com>\",\"keyExportType\":\"public\"}}}",
											"description": "(Required) JSON string containing PGP key details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getAuditDetails",
			"item": [
				{
					"name": "Fetch All Audit Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getAuditDetails",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getAuditDetails"
							]
						},
						"description": "Get all the audit details"
					},
					"response": [
						{
							"name": "Audit details fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAuditDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAuditDetails"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"All Audit data fetched successfully.\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"GetAllAudits\",\n  \"details\": [\n    {\n      \"OPERATION\": \"REST API\",\n      \"DESCRIPTION\": \"All Audit data fetched successfully.\",\n      \"AUDITID\": 902,\n      \"USERNAME\": \"admin\",\n      \"TIME\": \"Apr 18, 2023 13:25\"\n    },\n    {\n      \"OPERATION\": \"REST API\",\n      \"DESCRIPTION\": \"All Audit data fetched successfully.\",\n      \"AUDITID\": 902,\n      \"USERNAME\": \"admin\",\n      \"TIME\": \"Apr 18, 2023 13:25\"\n    }\n  ],\n  \"totalRows\": 1\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getAuditDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getAuditDetails"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getSSLVulnerabilityCount",
			"item": [
				{
					"name": "Get SSL Vulnerabilities Count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getSSLVulnerabilityCount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getSSLVulnerabilityCount"
							]
						},
						"description": "Get the total number of SSL vulnerabilities"
					},
					"response": [
						{
							"name": "SSL vulnerability count fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSLVulnerabilityCount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSLVulnerabilityCount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"SSL vulnerability data fetched successfully.\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"GetSSLVulnerabilityCount\",\n  \"details\": {\n    \"SSLVulnerabilityCount\": {\n      \"Weak Cipher Suites\": 0,\n      \"Poodle SSL\": 0,\n      \"Revoked\": 0,\n      \"SSLv3 Enabled\": 0,\n      \"No TLS1.2\": 1,\n      \"Heartbleed\": 0\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getSSLVulnerabilityCount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getSSLVulnerabilityCount"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "revokeMSCACertificate",
			"item": [
				{
					"name": "Revoke MSCA Certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/revokeMSCACertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"test3\",\"serial_number\":\"12345\",\"revoke_reason\":1}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"revokeMSCACertificate"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"common_name\":\"test3\",\"serial_number\":\"12345\",\"revoke_reason\":1}}}",
									"description": "(Required) JSON string containing revocation details"
								}
							]
						},
						"description": "Revoke a MSCA certificate"
					},
					"response": [
						{
							"name": "Certificate revoked successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/revokeMSCACertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"test3\",\"serial_number\":\"12345\",\"revoke_reason\":1}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"revokeMSCACertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"test3\",\"serial_number\":\"12345\",\"revoke_reason\":1}}}",
											"description": "(Required) JSON string containing revocation details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Certificate manageengine.com revoked successfully with reason Certificate hold.\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"RevokeMSCACertificate\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/revokeMSCACertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"test3\",\"serial_number\":\"12345\",\"revoke_reason\":1}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"revokeMSCACertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"test3\",\"serial_number\":\"12345\",\"revoke_reason\":1}}}",
											"description": "(Required) JSON string containing revocation details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/revokeMSCACertificate?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"test3\",\"serial_number\":\"12345\",\"revoke_reason\":1}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"revokeMSCACertificate"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"test3\",\"serial_number\":\"12345\",\"revoke_reason\":1}}}",
											"description": "(Required) JSON string containing revocation details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "getUnmanagedCertList",
			"item": [
				{
					"name": "Fetch Unmanaged Certificates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/getUnmanagedCertList?INPUT_DATA={\"operation\":{\"Details\":{\"type\":\"loadbalancer\"}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"getUnmanagedCertList"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"type\":\"loadbalancer\"}}}",
									"description": "(Required) JSON string containing type details"
								}
							]
						},
						"description": "Fetch the discovered and unmanaged certificates of format JKS/PKCS from a load balancer or shared path"
					},
					"response": [
						{
							"name": "Unmanaged certificates fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getUnmanagedCertList?INPUT_DATA={\"operation\":{\"Details\":{\"type\":\"loadbalancer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getUnmanagedCertList"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"type\":\"loadbalancer\"}}}",
											"description": "(Required) JSON string containing type details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Data fetched from the repository\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"getUnmanagedCertList\",\n  \"details\": [\n    {\n      \"Certificate.keystore::2\": \"ENTER_THE_PASSWORD\",\n      \"www.managengine.com.keystore::8\": \"ENTER_THE_PASSWORD\"\n    }\n  ],\n  \"totalRows\": 9\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getUnmanagedCertList?INPUT_DATA={\"operation\":{\"Details\":{\"type\":\"loadbalancer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getUnmanagedCertList"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"type\":\"loadbalancer\"}}}",
											"description": "(Required) JSON string containing type details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/getUnmanagedCertList?INPUT_DATA={\"operation\":{\"Details\":{\"type\":\"loadbalancer\"}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"getUnmanagedCertList"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"type\":\"loadbalancer\"}}}",
											"description": "(Required) JSON string containing type details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "discoverUnmanagedCert",
			"item": [
				{
					"name": "Import Unmanaged Certificates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/discoverUnmanagedCert?uploadedFile=sit enim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"discoverUnmanagedCert"
							],
							"query": [
								{
									"key": "uploadedFile",
									"value": "sit enim",
									"description": "(Required) A text file with certificate details and passwords"
								}
							]
						},
						"description": "Import the unmanaged certificates of format JKS/PKCS fetched from a load balancer or shared path"
					},
					"response": [
						{
							"name": "Certificates imported successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discoverUnmanagedCert?uploadedFile=sit enim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discoverUnmanagedCert"
									],
									"query": [
										{
											"key": "uploadedFile",
											"value": "sit enim",
											"description": "(Required) A text file with certificate details and passwords"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Status\": \"Success\",\n  \"Message\": \"All certificates were imported successfully.\",\n  \"ImportedCertificate\": [\n    \"Certificate.keystore\",\n    \"www.manageengine.com.keystore\"\n  ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discoverUnmanagedCert?uploadedFile=sit enim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discoverUnmanagedCert"
									],
									"query": [
										{
											"key": "uploadedFile",
											"value": "sit enim",
											"description": "(Required) A text file with certificate details and passwords"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/discoverUnmanagedCert?uploadedFile=sit enim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"discoverUnmanagedCert"
									],
									"query": [
										{
											"key": "uploadedFile",
											"value": "sit enim",
											"description": "(Required) A text file with certificate details and passwords"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "updateSSLAdditionalFields",
			"item": [
				{
					"name": "Update SSL Additional Fields",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/updateSSLAdditionalFields?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"fe1d1392618ae70c1065902a55d041ad\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"updateSSLAdditionalFields"
							],
							"query": [
								{
									"key": "INPUT_DATA",
									"value": "{\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"fe1d1392618ae70c1065902a55d041ad\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
									"description": "(Required) JSON string containing additional field details"
								}
							]
						},
						"description": "Update the existing additional fields associated with an SSL certificate"
					},
					"response": [
						{
							"name": "Additional fields updated successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updateSSLAdditionalFields?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"fe1d1392618ae70c1065902a55d041ad\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateSSLAdditionalFields"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"fe1d1392618ae70c1065902a55d041ad\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
											"description": "(Required) JSON string containing additional field details"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": {\n    \"message\": \"Additional field details updated successfully for mycert\",\n    \"status\": \"Success\"\n  },\n  \"name\": \"updateSSLAdditionalFields\"\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updateSSLAdditionalFields?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"fe1d1392618ae70c1065902a55d041ad\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateSSLAdditionalFields"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"fe1d1392618ae70c1065902a55d041ad\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
											"description": "(Required) JSON string containing additional field details"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "AUTHTOKEN",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updateSSLAdditionalFields?INPUT_DATA={\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"fe1d1392618ae70c1065902a55d041ad\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updateSSLAdditionalFields"
									],
									"query": [
										{
											"key": "INPUT_DATA",
											"value": "{\"operation\":{\"Details\":{\"common_name\":\"mycert\",\"serial_number\":\"fe1d1392618ae70c1065902a55d041ad\",\"sslAdditionalFieldData\":[{\"ADDITIONALFIELDNAME\":\"Owner Name\",\"ADDITIONALFIELDVALUE\":\"John\"},{\"ADDITIONALFIELDNAME\":\"dropdown\",\"ADDITIONALFIELDVALUE\":\"option2\"}]}}}",
											"description": "(Required) JSON string containing additional field details"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"Failure\",\n  \"message\": \"Error message description\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "AUTHTOKEN",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "host",
			"value": "localhost"
		},
		{
			"key": "port",
			"value": "6565"
		},
		{
			"key": "baseUrl",
			"value": "https://{{host}}:{{port}}/api/pki/restapi"
		}
	]
}